rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user documents, organizers can read all
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId ||
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'organizer'));
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Events can be read by all authenticated users, written by organizers
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'organizer';
    }

    // Registered events - students can register themselves, organizers can read all
    match /registeredEvents/{registrationId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
        request.auth.uid == request.resource.data.userId &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
      allow update, delete: if request.auth != null &&
        request.auth.uid == resource.data.userId;
    }
  }
}
